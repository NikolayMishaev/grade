html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Roboto;font-weight:400;font-style:normal;src:url(../fonts/Roboto-Regular.woff) format("woff"),url(../fonts/Roboto-Regular.woff2) format("woff2")}@font-face{font-family:Roboto;font-weight:500;font-style:normal;src:url(../fonts/Roboto-Medium.woff) format("woff"),url(../fonts/Roboto-Medium.woff2) format("woff2")}*{-webkit-tap-highlight-color:transparent}*,:after,:before{box-sizing:border-box}html{font-family:Roboto,Arial,Helvetica,sans-serif;font-size:100%;color:#121920;background-color:#fafafa}body{font-size:1rem;font-weight:400;margin:0;padding:0;text-rendering:optimizeLegibility}body,h1{line-height:130%}h1{margin-top:0;margin-bottom:1.25rem;font-size:1.875rem;font-weight:500}@media (min-width:48rem){h1{font-size:2.25rem}}h2{margin-top:0;margin-bottom:.625rem;font-size:1.25rem;font-weight:500;line-height:120%}@media (min-width:48rem){h2{font-size:1.5rem}}h3{margin-top:1.25rem;margin-bottom:.625rem;font-size:1rem;font-weight:500;line-height:150%}@media (min-width:48rem){h3{font-size:1.125rem}}h4{margin-top:0;margin-bottom:.625rem;font-size:1rem;font-weight:500;line-height:150%}p{margin:.625rem 0;letter-spacing:.01em;font-size:.875rem;font-weight:400;line-height:167%}@media (min-width:48rem){p{font-size:1rem}}ol{font-size:.875rem;font-weight:400;line-height:117%;margin:0;padding:0}ol:not([class]){padding-left:1.25rem;counter-reset:li}@media (min-width:48rem){ol:not([class]){font-size:1rem}}ol:not([class])>li{margin:.625rem 0;list-style:none}ol:not([class])>li>ol>li:before{content:counters(li,".") ""}ol:not([class])>li>ol>li{padding-left:.25rem}ol:not([class])>li>ol>li>ul{padding-left:2.1875rem}ol:not([class])>li:before{display:inline-block;min-width:.875rem;margin-right:.625rem;content:counters(li,".") ". ";counter-increment:li;text-align:center;color:#dc2c53}ul{margin:0;padding:0;list-style-type:none}ul:not([class]){padding-left:1.25rem}ul:not([class]) li{position:relative;margin:.625rem 0;padding-left:.9375rem}ul:not([class]) li ul{padding-left:0;list-style-type:none}ul:not([class]) li ul li:before{border:.0625rem solid #dc2c53;background-color:transparent}ul:not([class]) li:before{position:absolute;top:.3125rem;left:0;width:.3125rem;height:.3125rem;content:"";border-radius:50%;background-color:#dc2c53}blockquote{font-size:.875rem;margin:.625rem 0 1.25rem;padding:1.25rem 1.5625rem;border-left:.3125rem solid #dc2c53;border-radius:.3125rem;background-color:#fafafa}@media (min-width:48rem){blockquote{font-size:1rem}}a{transition:all .5s;color:#34aadd;-webkit-text-decoration-line:none;text-decoration-line:none;font-size:.875rem;line-height:167%}@media (min-width:48rem){a{font-size:1rem}}a:focus,a:hover{-webkit-text-decoration-line:underline;text-decoration-line:underline}a:active{opacity:.5}img{width:100%;height:100%}.heading{margin-top:0;margin-bottom:.625rem}.heading--h1{margin-bottom:1.25rem;font-size:1.875rem;font-weight:500;line-height:130%}@media (min-width:48rem){.heading--h1{font-size:2.25rem}}.heading--h2{font-size:1.25rem;font-weight:500;line-height:120%}@media (min-width:48rem){.heading--h2{font-size:1.5rem}}.heading--h3{margin-top:1.25rem;font-size:1rem;font-weight:500;line-height:150%}@media (min-width:48rem){.heading--h3{font-size:1.125rem}}.heading--h4{font-size:1rem;font-weight:500;line-height:150%}.page{display:flex;align-items:center;flex-direction:column;min-height:100vh}.page__content{flex:1;margin-top:6.5625rem;margin-bottom:6.25rem}@media (min-width:48rem){.page__content{margin-top:5rem}}@media (min-width:80rem){.page__content{display:flex;margin-top:8.125rem;margin-bottom:7.875rem}}@media (min-width:80rem){.page__content--page-index{margin-top:5rem}}.page__header{position:fixed;z-index:1;top:0;left:0}.button{font-size:.875rem;font-weight:500;line-height:108%;display:inline-block;padding:1.09375rem 1.875rem;transition:all .5s;color:#fff;border:0;border-radius:.3125rem;background-color:unset}.button:hover{cursor:pointer;text-decoration:none}.button:active{opacity:.5}.button:disabled{color:#bbc4d6;background-color:#ebebf1}.button:disabled:hover{cursor:auto;background-color:#ebebf1}.button--blue{background-color:#34aadd}.button--blue:hover{background-color:#6680ae}.button--small{padding:.375rem 1.875rem;border-radius:.3125rem 0 0 0}.button--no-fill{padding:0;color:#34aadd}.button--no-fill:hover{color:#6680ae}.button--no-fill:disabled{background-color:transparent}.button--no-fill:disabled:hover{color:#bbc4d6;background-color:transparent}.button--icon{display:flex;align-items:center}.icon--next{width:.625rem;height:.5625rem}.icon--loupe{width:1.1875rem;height:1.1875rem}.icon--left{margin-right:.5625rem}.icon--right{margin-left:.625rem}.icon--cursor-right{width:.375rem;height:.625rem}.icon--logo{width:8.5rem;height:2.0625rem}.icon--logo-small{width:5.875rem;height:1.1875rem}@media (min-width:80rem){.icon--logo-small{width:8.4375rem;height:1.875rem}}.icon--youtube{width:1.6875rem;height:1.125rem}.icon--instagram{width:1.5rem;height:1.5rem}.icon--star{width:1.3125rem;height:1.3125rem}.icon--comment,.icon--heart{width:.8125rem;height:.75rem}.icon--eye{width:.875rem;height:.5rem}.icon--important,.icon--question{width:1.25rem;height:1.25rem}.icon--burger-menu{width:1.25rem;height:.875rem}.icon--profile{width:1.5625rem;height:1.5625rem}.icon--close{width:.75rem;height:.75rem}.icon--apply{width:.6875rem;height:.5rem}.icon--profile-no-avatar{width:1.4375rem;height:2.1875rem}.icons__list{display:flex;flex-wrap:wrap}.icons__item{display:flex;align-items:center;margin-top:.625rem;margin-right:.9375rem}.main__content{padding:1.875rem 1.25rem;border-radius:.3125rem;background-color:#fff;box-shadow:0 .75rem 2.5rem rgba(0,0,0,.03),0 .1875rem .625rem hsla(0,0%,64.3%,.03)}@media (min-width:48rem){.main__content{padding:3.125rem 3.6875rem}}@media (min-width:80rem){.main__content{padding:3.125rem 6.875rem}}.main__content--page-index{background-color:#fafafa;border-radius:none;box-shadow:none;padding:0;margin:0 1.25rem}@media (min-width:80rem){.main__content--page-index{margin:0}}.main__item{margin-right:1.25rem}.main__item,.main__link{color:#bbc4d6}.main__link--active,.main__link:hover{color:#768298}.main__icon{margin-left:1.25rem}.main__list{display:flex;flex-wrap:wrap;padding:.1875rem 0}.main__navigation{margin:1.875rem 0 .9375rem}@media (min-width:80rem){.main__navigation{margin-top:0}}.main__header{margin:0 1.25rem}@media (min-width:80rem){.main__header{margin:0}}.main__description{margin:2.5rem 0}@media (min-width:48rem){.main__description{margin-top:3.125rem;max-width:37.5rem}}@media (min-width:80rem){.main__description{margin-top:3.8125rem;max-width:38.8125rem}}.aside__navigation{border-radius:.3125rem;background-color:#fff}@media (min-width:80rem){.aside__navigation{width:17.875rem;margin-right:2rem;border-radius:.5rem;background-color:unset;background-color:#fff;box-shadow:0 .75rem 2.5rem rgba(0,0,0,.03),0 .1875rem .625rem hsla(0,0%,64.3%,.03)}}.aside__button-mobile{font-weight:700;line-height:144%;display:flex;align-items:center;margin:0 auto;padding:.9375rem 0}@media (min-width:80rem){.aside__button-mobile{display:none}}.aside__list{display:none}@media (min-width:80rem){.aside__list{display:flex;flex-direction:column}}.aside__link{font-size:.875rem;display:block;padding:1.3125rem 1.875rem;color:#121920}.aside__link:hover{background-color:#fafafa;-webkit-text-decoration-line:none;text-decoration-line:none}.aside__item--active{font-weight:500}.content{width:100%;max-width:77.5rem}.header{display:flex;justify-content:center;width:100%;background-color:#fff;box-shadow:0 .1875rem .625rem rgba(0,0,0,.05)}.header__content{display:flex;flex-wrap:wrap;height:100%;min-height:6.5625rem}@media (min-width:48rem){.header__content{min-height:5rem}}.header__column--logo{margin:1rem 3.125rem 0 1.25rem}@media (min-width:48rem){.header__column--logo{margin-top:1.5rem;margin-right:3.0625rem}}@media (min-width:80rem){.header__column--logo{margin-right:3.75rem;margin-left:0}}.header__column--profile{display:flex;align-items:center;margin:1.125rem 1.3125rem 1.25rem auto}@media (min-width:48rem){.header__column--profile{order:1;height:100%;margin:0 1.25rem 0 3.125rem;padding-left:1.1875rem;border-left:.0625rem solid #ebebf1}}@media (min-width:80rem){.header__column--profile{margin-right:0;margin-left:3.75rem}}.header__column--search{width:100%;padding:0 .375rem;border-top:.0625rem solid rgba(187,196,214,.5019607843137255)}@media (min-width:48rem){.header__column--search{flex:1;width:unset;margin-top:1.25rem;padding:0;border-top:unset}}.header__link{display:block}.header__profile{display:block;width:1.5rem;height:1.5rem}@media (min-width:48rem){.header__profile{display:flex;align-items:center;width:unset;width:8.0625rem;height:unset}}.header__profile:hover{-webkit-text-decoration-line:none;text-decoration-line:none}.form__submit{padding:0;border:none;background-color:transparent}.form__submit:hover{cursor:pointer}.form__submit--search{display:flex;align-items:center;margin:0 .5rem 0 1rem;color:#768298}@media (min-width:48rem){.form__submit--search{margin-left:.6875rem}}.form__search{display:flex;align-items:center;min-height:2.5rem;border-radius:.3125rem}@media (min-width:48rem){.form__search{border:.0625rem solid #ebebf1}}.form__input{flex:1;font-size:.875rem;width:100%;padding:2px 0 0;color:#121920;border:none;outline:none}.form__input::-moz-placeholder{color:#bbc4d6}.form__input:-ms-input-placeholder{color:#bbc4d6}.form__input::placeholder{color:#bbc4d6}@media (min-width:48rem){.profile__mobile{display:none}}.profile__name{display:none}@media (min-width:48rem){.profile__name{font-size:.875rem;line-height:120%;display:block;overflow:hidden;max-width:4.875rem;margin-top:.0625rem;margin-right:.6875rem;margin-left:auto;transition:all .5s;white-space:nowrap;text-overflow:ellipsis;color:#768298}.profile__name:hover{cursor:pointer;color:#121920}}.profile__avatar{display:none}@media (min-width:48rem){.profile__avatar{position:relative;display:block;width:2.5rem;height:2.5rem;border-radius:50%;background-color:#ebebf1}}.profile__icon{position:absolute;top:5%;left:50%;transform:translateX(-50%)}.profile__photo{position:absolute;top:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.footer{display:flex;justify-content:center;width:100%;padding:1.25rem;background-color:#fff;box-shadow:0 .1875rem .625rem rgba(0,0,0,.05)}@media (min-width:48rem){.footer{padding:1.9375rem 1.25rem}}.footer__content{display:flex;align-items:center;flex-direction:column}@media (min-width:48rem){.footer__content{flex-direction:row;height:100%}}.footer__social-link{width:2.5rem;height:2.5rem;color:#fff;border-radius:50%;background-color:#bbc4d6;display:flex;align-items:center;justify-content:center}.footer__social-link:hover{background-color:#768298}.footer__list{flex-direction:column;transition:all .5s;display:flex;align-items:center;justify-content:center}@media (min-width:48rem){.footer__list{flex-direction:row;flex-wrap:wrap;justify-content:start;padding-top:.125rem;padding-left:2.5rem}}@media (min-width:80rem){.footer__list{margin-left:2.5rem;border-left:.0625rem solid rgba(187,196,214,.6)}}.footer__column--links{width:100%;margin:1.25rem 0;border-top:.0625rem solid #ebebf1;border-bottom:.0625rem solid #ebebf1}@media (min-width:48rem){.footer__column--links{display:flex;flex:1;width:unset;height:100%;margin:0;border:unset}}.footer__item{margin-top:1.25rem}.footer__item:last-child{margin-bottom:1.25rem}@media (min-width:48rem){.footer__item{margin-top:0;margin-right:1.875rem}.footer__item:last-child{margin-right:0;margin-bottom:0}}.social,.social__list{display:flex;align-items:center;justify-content:center}.social__list{flex-wrap:wrap}.social__item{margin-right:1.4375rem}.social__item:last-child{margin-right:0}.list__link{line-height:130%;display:block;text-align:center}@media (min-width:48rem){.list__link{font-size:.875rem}}.logo__link{display:flex;color:#bbc4d6}.logo__link:hover{color:#768298}.description__title{margin-bottom:1.25rem}@media (min-width:48rem){.description__title{margin-bottom:1.3125rem}}.description__text{font-size:.875rem}.tabs{display:flex;margin-top:0;margin-bottom:0;padding-left:0;list-style:none;border-bottom:.0625rem solid #bbc4d6}.tabs__item:not(:last-child){margin-right:3.125rem}.tabs__tab{font-size:1rem;line-height:1.3125rem;position:relative;overflow:hidden;margin-bottom:-.0625rem;padding:.25rem .0625rem .9375rem 0;transition:color .15s ease-in-out;color:#bbc4d6;border:none;background-color:transparent}.tabs__tab:hover,.tabs__tab[aria-selected=true]{color:#121920;cursor:pointer;font-weight:500}.tabs__tab:not([aria-selected=true]):after{transform:translateY(.25rem)}.tabs__tab:after{position:absolute;right:0;bottom:0;left:0;height:.25rem;content:"";transition:transform .15s ease-in-out;border-top-left-radius:.25rem;border-top-right-radius:.25rem;background-color:#dc2c53}.cards{display:flex;flex-wrap:wrap;margin:-.625rem}@media (min-width:80rem){.cards{margin:-1rem}}.cards__item{padding:.625rem}@media (min-width:48rem){.cards__item{width:50%}}@media (min-width:80rem){.cards__item{width:33.33333%;padding:1rem}}.reviews{font-size:.75rem;color:#768298}.reviews__list{display:flex}.reviews__counter{margin-left:6px}.reviews__item{margin-right:12px;display:flex;align-items:center}.reviews__item:last-child{margin-right:0}.card{border-radius:.5rem;background-color:#fff}.card__text{font-size:.875rem;color:#768298}.card__date{font-size:.75rem;margin:0 auto 0 0;color:#768298}.card__info{display:flex}.card__description{padding:20px 20px 16px}@media (min-width:48rem){.card__description{padding:10px 20px 15px}}.card__image{border-radius:.5rem .5rem 0 0;min-height:9.9375rem;-o-object-fit:cover;object-fit:cover}.container__tabs{margin-bottom:30px}@media (min-width:48rem){.container__tabs{margin-bottom:51px}}.slider{min-height:190px;background-color:#fff;display:flex;align-items:center;justify-content:center}@media (min-width:48rem){.slider{min-height:201px}}
/*# sourceMappingURL=data:application/json;base64, */